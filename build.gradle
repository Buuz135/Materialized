buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.

String build = ""
if (project.hasProperty("teamcity")) {
    build = System.getenv("BUILD_NUMBER")
}

if (build == null || build == ""){
    version = "${project.minecraft_version}-${project.mod_version}"
}else{
    version = "${project.minecraft_version}-${project.mod_version}-"+ build
}

group = "com.buuz135.materialized" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "materialized"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.12-14.21.0.2321"
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20161220"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
    compileOnly "org.projectlombok:lombok:1.16.16"
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

configurations {
    deployerJars
}

uploadArchives{
    repositories{
        mavenDeployer{
            configuration = configurations.deployerJars
            //repository(url: System.properties['URL']) {
            repository(url: "${project.ext['url']}") {
                authentication(userName: "${project.ext['httpuser']}", password: "${project.ext['httppass']}")
            }
            pom{
                groupId = project.group
                version = project.version
                artifactId = project.archivesBaseName

                pom.project {
                    name = project.archivesBaseName
                    packaging 'jar'
                    description 'Materialized'
                    url 'https://github.com/Buuz135/Materialized'
                    scm {
                        url 'https://github.com/Buuz135/Materialized'
                        connection 'scm:git:git@github.com/Buuz135/Materialized'
                        developerConnection 'scm:git:git@github.com/Buuz135/Materialized'
                    }
                    issueManagement {
                        system 'github'
                        url 'https://github.com/Buuz135/Materialized/issues'
                    }
                    licenses {
                        license {
                            name 'MIT License'
                            url 'https://opensource.org/licenses/MIT'
                            distribution 'repo'
                        }
                    }
                    developers {
                        developer {
                            id 'Buuz135'
                            name 'Buuz135'
                            roles {
                                role 'developer'
                            }
                        }
                    }
                }
            }
        }
    }
}
